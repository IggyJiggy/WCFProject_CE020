//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Application.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/EmployeeManagement")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEmployyeeRecord", ReplyAction="http://tempuri.org/IService1/AddEmployyeeRecordResponse")]
        string AddEmployyeeRecord(Application.ServiceReference1.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEmployyeeRecord", ReplyAction="http://tempuri.org/IService1/AddEmployyeeRecordResponse")]
        System.Threading.Tasks.Task<string> AddEmployyeeRecordAsync(Application.ServiceReference1.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeRecords", ReplyAction="http://tempuri.org/IService1/GetEmployeeRecordsResponse")]
        System.Data.DataSet GetEmployeeRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeRecords", ReplyAction="http://tempuri.org/IService1/GetEmployeeRecordsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEmployeeRecordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRecords", ReplyAction="http://tempuri.org/IService1/DeleteRecordsResponse")]
        string DeleteRecords(Application.ServiceReference1.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRecords", ReplyAction="http://tempuri.org/IService1/DeleteRecordsResponse")]
        System.Threading.Tasks.Task<string> DeleteRecordsAsync(Application.ServiceReference1.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchEmployeeRecord", ReplyAction="http://tempuri.org/IService1/SearchEmployeeRecordResponse")]
        System.Data.DataSet SearchEmployeeRecord(Application.ServiceReference1.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchEmployeeRecord", ReplyAction="http://tempuri.org/IService1/SearchEmployeeRecordResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchEmployeeRecordAsync(Application.ServiceReference1.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEmployeeContact", ReplyAction="http://tempuri.org/IService1/UpdateEmployeeContactResponse")]
        string UpdateEmployeeContact(Application.ServiceReference1.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEmployeeContact", ReplyAction="http://tempuri.org/IService1/UpdateEmployeeContactResponse")]
        System.Threading.Tasks.Task<string> UpdateEmployeeContactAsync(Application.ServiceReference1.Employee emp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Application.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Application.ServiceReference1.IService1>, Application.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public string AddEmployyeeRecord(Application.ServiceReference1.Employee emp) {
            return base.Channel.AddEmployyeeRecord(emp);
        }
        
        public System.Threading.Tasks.Task<string> AddEmployyeeRecordAsync(Application.ServiceReference1.Employee emp) {
            return base.Channel.AddEmployyeeRecordAsync(emp);
        }
        
        public System.Data.DataSet GetEmployeeRecords() {
            return base.Channel.GetEmployeeRecords();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEmployeeRecordsAsync() {
            return base.Channel.GetEmployeeRecordsAsync();
        }
        
        public string DeleteRecords(Application.ServiceReference1.Employee emp) {
            return base.Channel.DeleteRecords(emp);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRecordsAsync(Application.ServiceReference1.Employee emp) {
            return base.Channel.DeleteRecordsAsync(emp);
        }
        
        public System.Data.DataSet SearchEmployeeRecord(Application.ServiceReference1.Employee emp) {
            return base.Channel.SearchEmployeeRecord(emp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchEmployeeRecordAsync(Application.ServiceReference1.Employee emp) {
            return base.Channel.SearchEmployeeRecordAsync(emp);
        }
        
        public string UpdateEmployeeContact(Application.ServiceReference1.Employee emp) {
            return base.Channel.UpdateEmployeeContact(emp);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEmployeeContactAsync(Application.ServiceReference1.Employee emp) {
            return base.Channel.UpdateEmployeeContactAsync(emp);
        }
    }
}
